/*
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ArchiveContentRequest;
import org.openapitools.client.model.ContentStorageInfo;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.RestoreArchivedContentRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StorageInfoApi
 */
@Ignore
public class StorageInfoApiTest {

    private final StorageInfoApi api = new StorageInfoApi();

    
    /**
     * Retrieve storage properties for given content
     *
     * **Note:** this endpoint is available in Alfresco 7.2.0 and newer versions. It also requires at least one specific implementation of underlying functionality in Cloud Connector(s).  Gets storage properties for given content.  Please find below sample responses for this endpoint when Alfresco Content Connector for AWS S3 is installed.  Similar responses will be returned when Alfresco Content Connector for Azure Blob is installed, albeit it with  some native storage properties with x-ms- prefix instead of x-amz- prefix.  Standard storage class: &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archived\&quot;: \&quot;false\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Intelligent tiering storage class: &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archived\&quot;: \&quot;false\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;INTELLIGENT_TIERING\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Glacier archive storage class (no restore request ongoing or submitted): &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archived\&quot;: \&quot;true\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;GLACIER\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Glacier archive storage class (restore request ongoing, not completed): &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archive-restore-in-progress\&quot;: \&quot;true\&quot;,       \&quot;x-amz-restore\&quot;: \&quot;ongoing-request&#x3D;\\\&quot;true\\\&quot;\&quot;,       \&quot;x-alf-archived\&quot;: \&quot;true\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;GLACIER\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Glacier archive storage class (restore request completed): &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archive-restore-in-progress\&quot;: \&quot;false\&quot;,       \&quot;x-amz-restore\&quot;: \&quot;ongoing-request&#x3D;\\\&quot;false\\\&quot;, expiry-date&#x3D;\\\&quot;Fri Nov 26 01:00:00 CET 2021\\\&quot;\&quot;,       \&quot;x-alf-archive-restore-expiry\&quot;: \&quot;2021-11-26T00:00:00.000Z\&quot;,       \&quot;x-alf-archived\&quot;: \&quot;false\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;GLACIER\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStoragePropertiesTest() throws ApiException {
        String nodeId = null;
        String contentPropName = null;
        ContentStorageInfo response = api.getStorageProperties(nodeId, contentPropName);

        // TODO: test validations
    }
    
    /**
     * Retrieve storage properties for given version content
     *
     * **Note:** this endpoint is available in Alfresco 7.2.0 and newer versions. It also requires at least one specific implementation of underlying functionality in Cloud Connector(s).  Gets storage properties for given version content.  Please find below sample responses for this endpoint when Alfresco Content Connector for AWS S3 is installed.  Similar responses will be returned when Alfresco Content Connector for Azure Blob is installed, albeit it with  some native storage properties with x-ms- prefix instead of x-amz- prefix.  Standard storage class: &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archived\&quot;: \&quot;false\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Intelligent tiering storage class: &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archived\&quot;: \&quot;false\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;INTELLIGENT_TIERING\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Glacier archive storage class (no restore request ongoing or submitted): &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archived\&quot;: \&quot;true\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;GLACIER\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Glacier archive storage class (restore request ongoing, not completed): &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archive-restore-in-progress\&quot;: \&quot;true\&quot;,       \&quot;x-amz-restore\&quot;: \&quot;ongoing-request&#x3D;\\\&quot;true\\\&quot;\&quot;,       \&quot;x-alf-archived\&quot;: \&quot;true\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;GLACIER\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; Glacier archive storage class (restore request completed): &#x60;&#x60;&#x60;json {   \&quot;entry\&quot;: {     \&quot;storageProperties\&quot;: {       \&quot;x-alf-archive-restore-in-progress\&quot;: \&quot;false\&quot;,       \&quot;x-amz-restore\&quot;: \&quot;ongoing-request&#x3D;\\\&quot;false\\\&quot;, expiry-date&#x3D;\\\&quot;Fri Nov 26 01:00:00 CET 2021\\\&quot;\&quot;,       \&quot;x-alf-archive-restore-expiry\&quot;: \&quot;2021-11-26T00:00:00.000Z\&quot;,       \&quot;x-alf-archived\&quot;: \&quot;false\&quot;,       \&quot;x-amz-storage-class\&quot;: \&quot;GLACIER\&quot;     },     \&quot;id\&quot;: \&quot;cm:content\&quot;   } } &#x60;&#x60;&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVersionStoragePropertiesTest() throws ApiException {
        String nodeId = null;
        String versionId = null;
        String contentPropName = null;
        ContentStorageInfo response = api.getVersionStorageProperties(nodeId, versionId, contentPropName);

        // TODO: test validations
    }
    
    /**
     * Request to send given content to archive
     *
     * **Note:** this endpoint is available in Alfresco 7.2.0 and newer versions. It also requires at least one specific implementation of underlying functionality in Cloud Connector(s).  Request to send given content to archive. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void requestArchiveContentTest() throws ApiException {
        String nodeId = null;
        String contentPropName = null;
        ArchiveContentRequest archiveContentRequest = null;
        api.requestArchiveContent(nodeId, contentPropName, archiveContentRequest);

        // TODO: test validations
    }
    
    /**
     * Request to send given version content to archive
     *
     * **Note:** this endpoint is available in Alfresco 7.2.0 and newer versions. It also requires at least one specific implementation of underlying functionality in Cloud Connector(s).  Request to send given version content to archive. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void requestArchiveVersionContentTest() throws ApiException {
        String nodeId = null;
        String versionId = null;
        String contentPropName = null;
        ArchiveContentRequest archiveContentRequest = null;
        api.requestArchiveVersionContent(nodeId, versionId, contentPropName, archiveContentRequest);

        // TODO: test validations
    }
    
    /**
     * Request to restore given content from archive
     *
     * **Note:** this endpoint is available in Alfresco 7.2.0 and newer versions. It also requires at least one specific implementation of underlying functionality in Cloud Connector(s).  Request to restore given content from archive. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void requestRestoreContentFromArchiveTest() throws ApiException {
        String nodeId = null;
        String contentPropName = null;
        RestoreArchivedContentRequest restoreArchivedContentRequest = null;
        api.requestRestoreContentFromArchive(nodeId, contentPropName, restoreArchivedContentRequest);

        // TODO: test validations
    }
    
    /**
     * Request to restore given version content from archive
     *
     * **Note:** this endpoint is available in Alfresco 7.2.0 and newer versions. It also requires at least one specific implementation of underlying functionality in Cloud Connector(s).  Request to restore given version content from archive. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void requestRestoreVersionContentFromArchiveTest() throws ApiException {
        String nodeId = null;
        String versionId = null;
        String contentPropName = null;
        RestoreArchivedContentRequest restoreArchivedContentRequest = null;
        api.requestRestoreVersionContentFromArchive(nodeId, versionId, contentPropName, restoreArchivedContentRequest);

        // TODO: test validations
    }
    
}
