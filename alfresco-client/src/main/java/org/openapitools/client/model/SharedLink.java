/*
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ContentInfo;
import org.openapitools.client.model.PathInfo;
import org.openapitools.client.model.UserInfo;
import org.threeten.bp.OffsetDateTime;

/**
 * SharedLink
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-29T14:17:06.136707300+08:00[Asia/Ulaanbaatar]")
public class SharedLink {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expiresAt";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  public static final String SERIALIZED_NAME_NODE_ID = "nodeId";
  @SerializedName(SERIALIZED_NAME_NODE_ID)
  private String nodeId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private OffsetDateTime modifiedAt;

  public static final String SERIALIZED_NAME_MODIFIED_BY_USER = "modifiedByUser";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_USER)
  private UserInfo modifiedByUser;

  public static final String SERIALIZED_NAME_SHARED_BY_USER = "sharedByUser";
  @SerializedName(SERIALIZED_NAME_SHARED_BY_USER)
  private UserInfo sharedByUser;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private ContentInfo content;

  public static final String SERIALIZED_NAME_ALLOWABLE_OPERATIONS = "allowableOperations";
  @SerializedName(SERIALIZED_NAME_ALLOWABLE_OPERATIONS)
  private List<String> allowableOperations = null;

  public static final String SERIALIZED_NAME_ALLOWABLE_OPERATIONS_ON_TARGET = "allowableOperationsOnTarget";
  @SerializedName(SERIALIZED_NAME_ALLOWABLE_OPERATIONS_ON_TARGET)
  private List<String> allowableOperationsOnTarget = null;

  public static final String SERIALIZED_NAME_IS_FAVORITE = "isFavorite";
  @SerializedName(SERIALIZED_NAME_IS_FAVORITE)
  private Boolean isFavorite;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Object properties;

  public static final String SERIALIZED_NAME_ASPECT_NAMES = "aspectNames";
  @SerializedName(SERIALIZED_NAME_ASPECT_NAMES)
  private List<String> aspectNames = null;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private PathInfo path;


  public SharedLink id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SharedLink expiresAt(OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  public SharedLink nodeId(String nodeId) {
    
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Get nodeId
   * @return nodeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNodeId() {
    return nodeId;
  }


  public void setNodeId(String nodeId) {
    this.nodeId = nodeId;
  }


  public SharedLink name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name must not contain spaces or the following special characters: * \&quot; &lt; &gt; \\ / ? : and |. The character . must not be used at the end of the name. 
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name must not contain spaces or the following special characters: * \" < > \\ / ? : and |. The character . must not be used at the end of the name. ")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SharedLink title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public SharedLink description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public SharedLink modifiedAt(OffsetDateTime modifiedAt) {
    
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Get modifiedAt
   * @return modifiedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }


  public void setModifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public SharedLink modifiedByUser(UserInfo modifiedByUser) {
    
    this.modifiedByUser = modifiedByUser;
    return this;
  }

   /**
   * Get modifiedByUser
   * @return modifiedByUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserInfo getModifiedByUser() {
    return modifiedByUser;
  }


  public void setModifiedByUser(UserInfo modifiedByUser) {
    this.modifiedByUser = modifiedByUser;
  }


  public SharedLink sharedByUser(UserInfo sharedByUser) {
    
    this.sharedByUser = sharedByUser;
    return this;
  }

   /**
   * Get sharedByUser
   * @return sharedByUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserInfo getSharedByUser() {
    return sharedByUser;
  }


  public void setSharedByUser(UserInfo sharedByUser) {
    this.sharedByUser = sharedByUser;
  }


  public SharedLink content(ContentInfo content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ContentInfo getContent() {
    return content;
  }


  public void setContent(ContentInfo content) {
    this.content = content;
  }


  public SharedLink allowableOperations(List<String> allowableOperations) {
    
    this.allowableOperations = allowableOperations;
    return this;
  }

  public SharedLink addAllowableOperationsItem(String allowableOperationsItem) {
    if (this.allowableOperations == null) {
      this.allowableOperations = new ArrayList<String>();
    }
    this.allowableOperations.add(allowableOperationsItem);
    return this;
  }

   /**
   * The allowable operations for the Quickshare link itself. See allowableOperationsOnTarget for the allowable operations pertaining to the linked content node. 
   * @return allowableOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The allowable operations for the Quickshare link itself. See allowableOperationsOnTarget for the allowable operations pertaining to the linked content node. ")

  public List<String> getAllowableOperations() {
    return allowableOperations;
  }


  public void setAllowableOperations(List<String> allowableOperations) {
    this.allowableOperations = allowableOperations;
  }


  public SharedLink allowableOperationsOnTarget(List<String> allowableOperationsOnTarget) {
    
    this.allowableOperationsOnTarget = allowableOperationsOnTarget;
    return this;
  }

  public SharedLink addAllowableOperationsOnTargetItem(String allowableOperationsOnTargetItem) {
    if (this.allowableOperationsOnTarget == null) {
      this.allowableOperationsOnTarget = new ArrayList<String>();
    }
    this.allowableOperationsOnTarget.add(allowableOperationsOnTargetItem);
    return this;
  }

   /**
   * The allowable operations for the content node being shared. 
   * @return allowableOperationsOnTarget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The allowable operations for the content node being shared. ")

  public List<String> getAllowableOperationsOnTarget() {
    return allowableOperationsOnTarget;
  }


  public void setAllowableOperationsOnTarget(List<String> allowableOperationsOnTarget) {
    this.allowableOperationsOnTarget = allowableOperationsOnTarget;
  }


  public SharedLink isFavorite(Boolean isFavorite) {
    
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Get isFavorite
   * @return isFavorite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsFavorite() {
    return isFavorite;
  }


  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }


  public SharedLink properties(Object properties) {
    
    this.properties = properties;
    return this;
  }

   /**
   * A subset of the target node&#39;s properties, system properties and properties already available in the SharedLink are excluded. 
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A subset of the target node's properties, system properties and properties already available in the SharedLink are excluded. ")

  public Object getProperties() {
    return properties;
  }


  public void setProperties(Object properties) {
    this.properties = properties;
  }


  public SharedLink aspectNames(List<String> aspectNames) {
    
    this.aspectNames = aspectNames;
    return this;
  }

  public SharedLink addAspectNamesItem(String aspectNamesItem) {
    if (this.aspectNames == null) {
      this.aspectNames = new ArrayList<String>();
    }
    this.aspectNames.add(aspectNamesItem);
    return this;
  }

   /**
   * Get aspectNames
   * @return aspectNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getAspectNames() {
    return aspectNames;
  }


  public void setAspectNames(List<String> aspectNames) {
    this.aspectNames = aspectNames;
  }


  public SharedLink path(PathInfo path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PathInfo getPath() {
    return path;
  }


  public void setPath(PathInfo path) {
    this.path = path;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SharedLink sharedLink = (SharedLink) o;
    return Objects.equals(this.id, sharedLink.id) &&
        Objects.equals(this.expiresAt, sharedLink.expiresAt) &&
        Objects.equals(this.nodeId, sharedLink.nodeId) &&
        Objects.equals(this.name, sharedLink.name) &&
        Objects.equals(this.title, sharedLink.title) &&
        Objects.equals(this.description, sharedLink.description) &&
        Objects.equals(this.modifiedAt, sharedLink.modifiedAt) &&
        Objects.equals(this.modifiedByUser, sharedLink.modifiedByUser) &&
        Objects.equals(this.sharedByUser, sharedLink.sharedByUser) &&
        Objects.equals(this.content, sharedLink.content) &&
        Objects.equals(this.allowableOperations, sharedLink.allowableOperations) &&
        Objects.equals(this.allowableOperationsOnTarget, sharedLink.allowableOperationsOnTarget) &&
        Objects.equals(this.isFavorite, sharedLink.isFavorite) &&
        Objects.equals(this.properties, sharedLink.properties) &&
        Objects.equals(this.aspectNames, sharedLink.aspectNames) &&
        Objects.equals(this.path, sharedLink.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, expiresAt, nodeId, name, title, description, modifiedAt, modifiedByUser, sharedByUser, content, allowableOperations, allowableOperationsOnTarget, isFavorite, properties, aspectNames, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SharedLink {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedByUser: ").append(toIndentedString(modifiedByUser)).append("\n");
    sb.append("    sharedByUser: ").append(toIndentedString(sharedByUser)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    allowableOperations: ").append(toIndentedString(allowableOperations)).append("\n");
    sb.append("    allowableOperationsOnTarget: ").append(toIndentedString(allowableOperationsOnTarget)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    aspectNames: ").append(toIndentedString(aspectNames)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

