/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package mn.erin.ees.dms.rest;

import mn.erin.ees.dms.rest.model.DocumentTypePayloadRestModel;
import mn.erin.ees.dms.rest.model.DocumentTypeRestModel;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-08-26T14:41:06.294612900+08:00[Asia/Ulaanbaatar]")
@Validated
@Api(value = "document-type", description = "the document-type API")
public interface DocumentTypeApi {

    default DocumentTypeApiDelegate getDelegate() {
        return new DocumentTypeApiDelegate() {};
    }

    /**
     * POST /document-type/create/{organizationId} : create a document type
     *
     * @param organizationId ID of the organization (required)
     * @param documentTypePayloadRestModel  (required)
     * @return return new document type (status code 201)
     */
    @ApiOperation(value = "create a document type", nickname = "createDocumentType", notes = "", response = DocumentTypeRestModel.class, tags={ "Document type", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "return new document type", response = DocumentTypeRestModel.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/document-type/create/{organizationId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<DocumentTypeRestModel> createDocumentType(@ApiParam(value = "ID of the organization", required = true) @PathVariable("organizationId") String organizationId,@ApiParam(value = "", required = true) @Valid @RequestBody DocumentTypePayloadRestModel documentTypePayloadRestModel) {
        return getDelegate().createDocumentType(organizationId, documentTypePayloadRestModel);
    }


    /**
     * GET /document-type/get/{organizationId}/{groupId} : returns all document types
     *
     * @param organizationId ID of the organization (required)
     * @param groupId ID of the group (required)
     * @return Available document list (status code 201)
     */
    @ApiOperation(value = "returns all document types", nickname = "getDocumentTypes", notes = "", response = DocumentTypeRestModel.class, responseContainer = "List", tags={ "Document type", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Available document list", response = DocumentTypeRestModel.class, responseContainer = "List") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/document-type/get/{organizationId}/{groupId}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<DocumentTypeRestModel>> getDocumentTypes(@ApiParam(value = "ID of the organization", required = true) @PathVariable("organizationId") String organizationId,@ApiParam(value = "ID of the group", required = true) @PathVariable("groupId") String groupId) {
        return getDelegate().getDocumentTypes(organizationId, groupId);
    }

}
