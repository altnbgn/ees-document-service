openapi: 3.0.3
info:
  version: 1.0.0
  title: EES Document REST API
  description: EES Document REST API definitions

servers:
  - url: /documentApi

paths:
  /document/get/{organizationId}/{groupId}:
    get:
      summary: returns all documents
      operationId: getDocuments
      tags:
        - Documents
      parameters:
          - name: organizationId
            in: path
            description: ID of the organization
            required: true
            schema:
              type: string
          - name: groupId
            in: path
            description: ID of the group
            required: true
            schema:
              type: string
      responses:
        200:
          description: Document list
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Documents'

  /document/content/{contentId}:
    get:
      summary: return file
      operationId: download
      description: Download a document
      tags:
        - Document
      parameters:
        - name: contentId
          in: path
          description: ID of the content
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary


  /document/create/{organizationId}/{groupId}/{createdUser}/{documentName}/{documentType}/{createdDate}/{description}:
    post:
      summary: upload documents
      operationId: upload
      description: Upload a document
      tags:
        - Documents
      parameters:
        - name: organizationId
          in: path
          description: ID of the organization
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          description: ID of the group
          required: true
          schema:
            type: string
        - name: createdUser
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: documentName
          in: path
          description: ID of the organization
          required: true
          schema:
            type: string
        - name: documentType
          in: path
          description: ID of the group
          required: true
          schema:
            type: string
        - name: createdDate
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
        - name: description
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentInput'
      responses:
        201:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCreationResponse'
        400:
          description: Input data invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
        404:
          description: Selected folder does not exit
        default:
          description: General document list JSON model


components:
  schemas:

    Error:
      type: object
      properties:
        reason:
          type: string
        message:
          type: string

    Document:
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        groupId:
          type: string
        name:
          type: string
        type:
          type: string
        createdUser:
          type: string
        date:
          type: string
        path:
          type: string
        description:
          type: string
        file:
          type: string
      required:
           - id
           - organizationId
           - groupId
           - name
           - type
           - createdUser
           - date
           - path
           - description
           - file


    DocumentInput:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary

    DocumentCreationResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
        id:
          type: string
          description: created document id

    Documents:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'

    GetFileResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Error'
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          format: binary